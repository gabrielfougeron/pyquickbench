
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_build/auto_examples/tutorial/02-Caching_benchmarks.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__build_auto_examples_tutorial_02-Caching_benchmarks.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__build_auto_examples_tutorial_02-Caching_benchmarks.py:


Caching benchmarks
==================

.. GENERATED FROM PYTHON SOURCE LINES 7-11

Performance benchmarks as run by pyquickbench are typically quite lengthy. Indeed, by default, pyquickbench uses the standard :meth:`python:timeit.Timer.autorange` to assess the number of times a benchmark should be run to ensure reliable timings, which comes with significant overhead as any call to this function will require a non-configurable minimum execution time of 0.2 seconds.

In pyquickbench, caching results in order to avoid a full re-run is as simple as providing a file name to :func:`pyquickbench.run_benchmark`.


.. GENERATED FROM PYTHON SOURCE LINES 11-42

.. code-block:: Python



    import pyquickbench

    def comprehension(n):
        return ['' for _ in range(n)]

    def star_operator(n):
        return ['']*n

    def for_loop_append(n):
        l = []
        for _ in range(n):
            l.append('')
    
    all_funs = [
        comprehension   ,
        star_operator   ,
        for_loop_append ,
    ]
 
    n_bench = 12
    all_sizes = [2**n for n in range(n_bench)]

    pyquickbench.run_benchmark(
        all_sizes   ,
        all_funs    ,
        show = True ,
        filename = timings_filename     ,
    ) 




.. image-sg:: /_build/auto_examples/tutorial/images/sphx_glr_02-Caching_benchmarks_001.png
   :alt: 02 Caching benchmarks
   :srcset: /_build/auto_examples/tutorial/images/sphx_glr_02-Caching_benchmarks_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 20.238 seconds)


.. _sphx_glr_download__build_auto_examples_tutorial_02-Caching_benchmarks.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 02-Caching_benchmarks.ipynb <02-Caching_benchmarks.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 02-Caching_benchmarks.py <02-Caching_benchmarks.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
