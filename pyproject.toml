[build-system]
requires = [
    "setuptools>=77"  ,
    "wheel"           ,
    "build"           ,
    "numpy"           ,
    "cython"          ,
]
build-backend = "setuptools.build_meta"

[project]
name = "pyquickbench"
version = "0.2.6"
description = "A pure Pyton tool to perform time and accuracy benchmarks"
readme = {file = "README.md", content-type = "text/markdown"}
license = "BSD-2-Clause"
license-files = ["LICENSE"]
keywords = ["Python", "benchmark"]
authors = [
  {name = "Gabriel Fougeron", email = "gabriel.fougeron@hotmail.fr"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Natural Language :: English",
]
requires-python = ">= 3.9"
dynamic = ["dependencies", "optional-dependencies"]
[tool.setuptools.dynamic.dependencies]
file = ["requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
docs = {file = ["requirements-docs.txt"]}
tests = {file = ["requirements-tests.txt"]}

[project.urls]
Homepage = "https://gabrielfougeron.github.io/pyquickbench/"
Documentation = "https://gabrielfougeron.github.io/pyquickbench/"
Repository = "https://github.com/gabrielfougeron/pyquickbench"
Changelog = "https://github.com/gabrielfougeron/pyquickbench/releases/"

[tool.pytest.ini_options]
timeout = 1
minversion = "6.0"
addopts = "-v -ra --junit-xml=docs/pytest_out/junit.xml -n 0"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
junit_family = "xunit2"
junit_logging = "system-out"
junit_suite_name = "Pytest test results"
junit_log_passing_tests = true


[tool.cibuildwheel]
# skip = ["*-musllinux*"]
pyodide-version = "0.28.2"
# pyodide-version = "0.26.3"

[tool.cibuildwheel.pyodide]
# Choose a specific pyodide-build version
dependency-versions = { packages = ["pyodide-build==0.30.7"] }

# before-test = "pip install -r requirements/requirements-cibuildwheel-test.txt"
# test-command = "pytest tests"
# Make sure that cibuildwheel as a whole does not fail even if some tests fail.
# test-command = 'if pytest tests; then echo "Tests all succeeded"; else echo "At least one test failed"; fi'

# Possible choices of architecture. CLI argument --archs
# x86_64 i686 aarch64 ppc64le s390x armv7l riscv64
# Succeded in the past : x86_66     (only !)

# test-sources = ["tests", "pyproject.toml"]

# [tool.cibuildwheel.linux]
# before-all = "yum install -y openblas-devel fftw-devel"
